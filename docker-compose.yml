version: '3.8'

services:
  quantumsentinel-nexus:
    build:
      context: .
      dockerfile: Dockerfile
    image: quantumsentinel/nexus:3.0
    container_name: quantumsentinel-nexus

    # Environment variables
    environment:
      - PYTHONPATH=/app
      - DEBIAN_FRONTEND=noninteractive
      - TZ=UTC

    # Volume mappings
    volumes:
      # Mount directory for target configuration files
      - ./targets:/app/targets:ro
      # Mount directory for generated reports and evidence
      - ./security_testing:/app/assessments:rw
      # Mount directory for custom configurations
      - ./config:/app/config:ro
      # Mount wordlists and templates
      - ./wordlists:/app/wordlists:ro

    # Port mappings (if web interface is enabled)
    ports:
      - "8080:8080"   # HTTP web interface
      - "8443:8443"   # HTTPS web interface

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8G
        reservations:
          cpus: '2.0'
          memory: 4G

    # Security settings
    security_opt:
      - no-new-privileges:true

    # Capabilities for network analysis
    cap_add:
      - NET_ADMIN
      - NET_RAW

    # Keep container running for interactive use
    stdin_open: true
    tty: true

    # Restart policy
    restart: unless-stopped

    # Healthcheck
    healthcheck:
      test: ["CMD", "python3", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Web interface service (if developing web UI)
  web-interface:
    build:
      context: .
      dockerfile: Dockerfile
    image: quantumsentinel/nexus:3.0
    container_name: quantumsentinel-web

    environment:
      - FLASK_APP=web_interface.py
      - FLASK_ENV=production
      - PYTHONPATH=/app
      - QUANTUMSENTINEL_MODE=comprehensive

    volumes:
      - ./security_testing:/app/assessments:rw

    ports:
      - "5000:5000"

    command: ["python3", "quantumsentinel_orchestrator.py", "--web-interface", "--host=0.0.0.0", "--port=5000"]

    depends_on:
      - quantumsentinel-nexus

    profiles:
      - web

    restart: unless-stopped

  # Optional: Database service for storing results
  database:
    image: postgres:15-alpine
    container_name: quantumsentinel-db

    environment:
      - POSTGRES_DB=quantumsentinel
      - POSTGRES_USER=security
      - POSTGRES_PASSWORD=secure_password_change_me

    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro

    ports:
      - "5432:5432"

    profiles:
      - database

    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16